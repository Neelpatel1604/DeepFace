{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/utils/obsWebSocket.ts"],"sourcesContent":["import OBSWebSocket from 'obs-websocket-js';\r\n\r\n// Type definitions for OBS WebSocket responses\r\ninterface SourceFilter {\r\n    filterName: string;\r\n    filterKind: string;\r\n    filterSettings?: Record<string, unknown>;\r\n    [key: string]: unknown;\r\n}\r\n\r\ninterface SceneItem {\r\n    sourceName: string;\r\n    sceneItemId: number;\r\n    [key: string]: unknown;\r\n}\r\n\r\nclass OBSWebSocketManager {\r\n    private static instance: OBSWebSocketManager;\r\n    private obs: OBSWebSocket;\r\n    private connectionStatus: boolean = false;\r\n    private statusListeners: ((status: boolean) => void)[] = [];\r\n    private currentPassword: string | undefined;\r\n\r\n    private constructor() {\r\n        this.obs = new OBSWebSocket();\r\n        this.setupEventListeners();\r\n    }\r\n\r\n    public static getInstance(): OBSWebSocketManager {\r\n        if (!OBSWebSocketManager.instance) {\r\n            OBSWebSocketManager.instance = new OBSWebSocketManager();\r\n        }\r\n        return OBSWebSocketManager.instance;\r\n    }\r\n\r\n    private setupEventListeners() {\r\n        this.obs.on('ConnectionOpened', () => {\r\n            this.connectionStatus = true;\r\n            this.notifyStatusListeners();\r\n        });\r\n\r\n        this.obs.on('ConnectionClosed', () => {\r\n            this.connectionStatus = false;\r\n            this.notifyStatusListeners();\r\n        });\r\n    }\r\n\r\n    public async connect(address: string = 'localhost:4455', password?: string) {\r\n        try {\r\n            this.currentPassword = password;\r\n            await this.obs.connect(`ws://${address}`, password);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to connect:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async disconnect() {\r\n        try {\r\n            await this.obs.disconnect();\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to disconnect:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isConnected(): boolean {\r\n        return this.connectionStatus;\r\n    }\r\n\r\n    public addStatusListener(listener: (status: boolean) => void) {\r\n        this.statusListeners.push(listener);\r\n    }\r\n\r\n    public removeStatusListener(listener: (status: boolean) => void) {\r\n        this.statusListeners = this.statusListeners.filter(l => l !== listener);\r\n    }\r\n\r\n    private notifyStatusListeners() {\r\n        this.statusListeners.forEach(listener => listener(this.connectionStatus));\r\n    }\r\n\r\n    public async getScenes() {\r\n        try {\r\n            const { scenes } = await this.obs.call('GetSceneList');\r\n            return scenes;\r\n        } catch (error) {\r\n            console.error('Failed to get scenes:', error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    public async getCurrentScene() {\r\n        try {\r\n            const { currentProgramSceneName } = await this.obs.call('GetCurrentProgramScene');\r\n            return currentProgramSceneName;\r\n        } catch (error) {\r\n            console.error('Failed to get current scene:', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async applyProtectionFilter(sourceName: string, params: {\r\n        model: string;\r\n        strength: number;\r\n        iterations: number;\r\n        alpha: number;\r\n        epsilon: number;\r\n        targetArea: 'face' | 'full' | 'custom';\r\n    }): Promise<boolean> {\r\n        try {\r\n            const existingFilters = await this.obs.call('GetSourceFilterList', { sourceName });\r\n            const hasProtectionFilter = (existingFilters.filters as SourceFilter[]).some((f: SourceFilter) => f.filterName === 'DeepfakeProtection');\r\n\r\n            const filterSettings = {\r\n                contrast: 1.0 + (params.strength / 200),\r\n                brightness: 1.0 - (params.strength / 400),\r\n                gamma: 1.0 + (params.alpha * 10),\r\n                saturation: 1.0 + (params.epsilon),\r\n                hue_shift: params.iterations % 360,\r\n                opacity: 1.0,\r\n            };\r\n\r\n            if (hasProtectionFilter) {\r\n                await this.obs.call('SetSourceFilterSettings', {\r\n                    sourceName,\r\n                    filterName: 'DeepfakeProtection',\r\n                    filterSettings,\r\n                });\r\n            } else {\r\n                await this.obs.call('CreateSourceFilter', {\r\n                    sourceName,\r\n                    filterName: 'DeepfakeProtection',\r\n                    filterKind: 'color_filter_v2',\r\n                    filterSettings,\r\n                });\r\n            }\r\n\r\n            await this.obs.call('SetSourceFilterEnabled', {\r\n                sourceName,\r\n                filterName: 'DeepfakeProtection',\r\n                filterEnabled: true,\r\n            });\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to apply protection filter:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async removeProtectionFilter(sourceId: string) {\r\n        try {\r\n            try {\r\n                await this.obs.call('SetSourceFilterEnabled', {\r\n                    sourceName: sourceId,\r\n                    filterName: 'DeepfakeProtection',\r\n                    filterEnabled: false\r\n                });\r\n\r\n                await this.obs.call('SetSourceFilterEnabled', {\r\n                    sourceName: sourceId,\r\n                    filterName: 'DeepfakeProtection_LUT',\r\n                    filterEnabled: false\r\n                });\r\n            } catch (error) {\r\n                console.warn('Failed to disable filters:', error);\r\n            }\r\n\r\n            try {\r\n                await this.obs.call('RemoveSourceFilter', {\r\n                    sourceName: sourceId,\r\n                    filterName: 'DeepfakeProtection'\r\n                });\r\n            } catch (error) {\r\n                console.warn('Failed to remove color filter:', error);\r\n            }\r\n\r\n            try {\r\n                await this.obs.call('RemoveSourceFilter', {\r\n                    sourceName: sourceId,\r\n                    filterName: 'DeepfakeProtection_LUT'\r\n                });\r\n            } catch (error) {\r\n                console.warn('Failed to remove LUT filter:', error);\r\n            }\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to remove protection filters:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async startVirtualCamera(): Promise<boolean> {\r\n        try {\r\n            await this.obs.call('StartVirtualCam');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to start virtual camera:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async stopVirtualCamera(): Promise<boolean> {\r\n        try {\r\n            await this.obs.call('StopVirtualCam');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Failed to stop virtual camera:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async getSceneSources(sceneName: string): Promise<Array<{ sourceName: string }>> {\r\n        try {\r\n            const { sceneItems } = await this.obs.call('GetSceneItemList', {\r\n                sceneName: sceneName\r\n            });\r\n            return (sceneItems as SceneItem[]).map((item: SceneItem) => ({\r\n                sourceName: item.sourceName\r\n            }));\r\n        } catch (error) {\r\n            console.error('Failed to get scene sources:', error);\r\n            return [];\r\n        }\r\n    }\r\n}\r\n\r\nexport default OBSWebSocketManager;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/components/SettingsPanel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport OBSWebSocketManager from '../utils/obsWebSocket';\r\nimport { Button } from './ui/button';\r\nimport { Label } from './ui/label';\r\n\r\nconst AVAILABLE_MODELS = [\r\n    { id: 'dlib', name: 'Dlib (Smallest)', maxStrength: 70 },\r\n    { id: 'arcface', name: 'ArcFace', maxStrength: 85 },\r\n    { id: 'facenet', name: 'FaceNet', maxStrength: 90 },\r\n    { id: 'vggface2', name: 'VGGFace2', maxStrength: 100 }\r\n];\r\n\r\ninterface AdvancedSettings {\r\n    iterations: number;\r\n    alpha: number;\r\n    epsilon: number;\r\n    targetArea: 'face' | 'full' | 'custom';\r\n    customRegion?: { x: number; y: number; width: number; height: number };\r\n}\r\n\r\ninterface SettingsPanelProps {\r\n    onConnect: () => void;\r\n}\r\n\r\nexport default function SettingsPanel({ onConnect }: SettingsPanelProps) {\r\n    const [address, setAddress] = useState('localhost:4455');\r\n    const [password, setPassword] = useState('');\r\n    const [selectedModel, setSelectedModel] = useState('dlib');\r\n    const [advancedSettings, setAdvancedSettings] = useState<AdvancedSettings>({\r\n        iterations: 10,\r\n        alpha: 0.01,\r\n        epsilon: 0.1,\r\n        targetArea: 'face'\r\n    });\r\n    const obsManager = OBSWebSocketManager.getInstance();\r\n\r\n    const handleConnect = async () => {\r\n        try {\r\n            const success = await obsManager.connect(address, password);\r\n            if (success) {\r\n                // Store settings in localStorage for the comparison page\r\n                localStorage.setItem('protectionSettings', JSON.stringify({\r\n                    model: selectedModel,\r\n                    ...advancedSettings\r\n                }));\r\n                toast.success('Connected to OBS successfully!');\r\n                onConnect();\r\n                // Start the virtual camera after connecting\r\n                await obsManager.startVirtualCamera();\r\n            } else {\r\n                toast.error('Failed to connect to OBS');\r\n            }\r\n        } catch (error) {\r\n            toast.error('Connection error: ' + (error as Error).message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-3xl mx-auto space-y-8\">\r\n            {/* Connection Settings */}\r\n            <div className=\"bg-gray-800/50 p-6 rounded-lg backdrop-blur-sm border border-gray-700\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Connection Settings</h2>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                        <Label htmlFor=\"address\">Address</Label>\r\n                        <input\r\n                            id=\"address\"\r\n                            type=\"text\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                            className=\"w-full bg-gray-700 p-2 rounded border border-gray-600\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <input\r\n                            id=\"address\"\r\n                            type=\"text\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className=\"w-full bg-gray-700 p-2 rounded border border-gray-600\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Protection Parameters */}\r\n            <div className=\"bg-gray-800/50 p-6 rounded-lg backdrop-blur-sm border border-gray-700\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Protection Parameters</h2>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <Label htmlFor=\"model\">Model</Label>\r\n                        <select\r\n                            id=\"model\"\r\n                            value={selectedModel}\r\n                            onChange={(e) => setSelectedModel(e.target.value)}\r\n                            className=\"w-full bg-gray-700 text-white p-2 rounded border border-gray-600\"\r\n                        >\r\n                            {AVAILABLE_MODELS.map((model) => (\r\n                                <option key={model.id} value={model.id}>\r\n                                    {model.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Label htmlFor=\"iterations\">Iterations (1-50)</Label>\r\n                        <input\r\n                            id=\"iterations\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"50\"\r\n                            value={advancedSettings.iterations}\r\n                            onChange={(e) => setAdvancedSettings({\r\n                                ...advancedSettings,\r\n                                iterations: Math.min(50, Math.max(1, parseInt(e.target.value) || 1))\r\n                            })}\r\n                            className=\"w-full bg-gray-700 text-white p-2 rounded border border-gray-600\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Label htmlFor=\"alpha\">Alpha (Step Size)</Label>\r\n                        <input\r\n                            id=\"alpha\"\r\n                            type=\"number\"\r\n                            step=\"0.001\"\r\n                            min=\"0.001\"\r\n                            max=\"0.1\"\r\n                            value={advancedSettings.alpha}\r\n                            onChange={(e) => setAdvancedSettings({\r\n                                ...advancedSettings,\r\n                                alpha: parseFloat(e.target.value)\r\n                            })}\r\n                            className=\"w-full bg-gray-700 text-white p-2 rounded border border-gray-600\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Label htmlFor=\"targetArea\">Target Area</Label>\r\n                        <select\r\n                            id=\"targetArea\"\r\n                            value={advancedSettings.targetArea}\r\n                            onChange={(e) => setAdvancedSettings({\r\n                                ...advancedSettings,\r\n                                targetArea: e.target.value as 'face' | 'full' | 'custom'\r\n                            })}\r\n                            className=\"w-full bg-gray-700 text-white p-2 rounded border border-gray-600\"\r\n                        >\r\n                            <option value=\"face\">Face Only</option>\r\n                            <option value=\"full\">Full Frame</option>\r\n                            <option value=\"custom\">Custom Region</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Connect Button */}\r\n            <div className=\"flex justify-end\">\r\n                <Button\r\n                    onClick={handleConnect}\r\n                    className=\"bg-blue-600 hover:bg-blue-700\"\r\n                >\r\n                    Connect and Continue\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Downloads/DeepFace/DeepFace_Frontnend/frontend/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRouter } from 'next/navigation';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n    const router = useRouter();\r\n    const [showPasswordHelp, setShowPasswordHelp] = useState(false);\r\n\r\n    const handleConnect = () => {\r\n        router.push('/comparison');\r\n    };\r\n\r\n    const togglePasswordHelp = () => {\r\n        setShowPasswordHelp(!showPasswordHelp);\r\n    };\r\n\r\n    return (\r\n        <main className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white p-8\">\r\n            <Toaster position=\"top-right\" />\r\n            <div className=\"max-w-3xl mx-auto\">\r\n                <h1 className=\"text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-600 mb-8\">\r\n                    DeepFace\r\n                </h1>\r\n                <SettingsPanel onConnect={handleConnect} />\r\n\r\n                {/* Password Help Section */}\r\n                <div className=\"mt-4\">\r\n                    <button\r\n                        onClick={togglePasswordHelp}\r\n                        className=\"text-blue-400 hover:text-blue-300 focus:outline-none\"\r\n                    >\r\n                        Where do I find my password?\r\n                    </button>\r\n                    {showPasswordHelp && (\r\n                        <div className=\"bg-gray-800 p-4 rounded-md mt-2\">\r\n                            <h3 className=\"font-semibold mb-2\">Finding Your OBS WebSocket Password</h3>\r\n                            <p>\r\n                                1. Open OBS Studio.\r\n                            </p>\r\n                            <p>\r\n                                2. Go to &quot;Tools&quot; in the top menu.\r\n                            </p>\r\n                            <p>\r\n                                3. Select &quot;WebSocket Server Settings&quot;.\r\n                            </p>\r\n                            <p>\r\n                                4. If &quot;Enable Authentication&quot; is checked, your password will be displayed in the &quot;Server Password&quot; field.\r\n                            </p>\r\n                            <p>\r\n                                5. If &quot;Enable Authentication&quot; is not checked, you do not need a password.\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,gBAAgB;QAClB,OAAO,IAAI,CAAC;IAChB;IAEA,MAAM,qBAAqB;QACvB,oBAAoB,CAAC;IACzB;IAEA,qBACI,8OAAC;QAAK,WAAU;;0BACZ,8OAAC,uJAAA,CAAA,UAAO;gBAAC,UAAS;;;;;;0BAClB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAAqG;;;;;;kCAGnH,8OAAC,mIAAA,CAAA,UAAa;wBAAC,WAAW;;;;;;kCAG1B,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCACG,SAAS;gCACT,WAAU;0CACb;;;;;;4BAGA,kCACG,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;kDAAE;;;;;;kDAGH,8OAAC;kDAAE;;;;;;kDAGH,8OAAC;kDAAE;;;;;;kDAGH,8OAAC;kDAAE;;;;;;kDAGH,8OAAC;kDAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS/B","debugId":null}}]
}